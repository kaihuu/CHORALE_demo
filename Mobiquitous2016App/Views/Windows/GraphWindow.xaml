<Window x:Class="Mobiquitous2016App.Views.Windows.GraphWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:windowViewModels="clr-namespace:Mobiquitous2016App.ViewModels.WindowViewModels"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        Width="800"
        Height="600"
        AllowsTransparency="True"
        WindowStyle="None">

    <Window.DataContext>
        <windowViewModels:GraphWindowViewModel />
    </Window.DataContext>



    <i:Interaction.Triggers>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <materialDesign:Card Grid.Row="0" UniformCornerRadius="0">

            <Grid Background="{Binding BackgroundColor}">

                <Label Margin="20,20,0,20"
                       Content="{Binding Title}"
                       FontSize="28"
                       Foreground="{Binding TextColor}" />

                <StackPanel HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">

                    <StackPanel.Resources>
                        <Style x:Key="CategoryButtonStyleKey"
                               BasedOn="{StaticResource MaterialDesignToolButton}"
                               TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="{Binding TextColor}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="materialDesign:RippleAssist.ClipToBounds" Value="True" />
                            <Setter Property="Margin" Value="10,5,10,5" />
                        </Style>
                    </StackPanel.Resources>

                    <Button Content="CHORALE" Style="{DynamicResource CategoryButtonStyleKey}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodName="SwitchToChoralePage" MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="3D CHORALE" Style="{DynamicResource CategoryButtonStyleKey}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodName="SwitchTo3DChoralePage" MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="ECGs" Style="{DynamicResource CategoryButtonStyleKey}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodName="SwitchToEcgsPage" MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Recent ECGs" Style="{DynamicResource CategoryButtonStyleKey}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodName="SwitchToRecentEcgsPage" MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="Elemental R" Style="{DynamicResource CategoryButtonStyleKey}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <l:LivetCallMethodAction MethodName="SwitchToRPage" MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                </StackPanel>

                <StackPanel Margin="5"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Background="Transparent"
                            Orientation="Horizontal">

                    <StackPanel.Resources>
                        <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Foreground" Value="{Binding TextColor}" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="FontFamily" Value="Marlett" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="1" />
                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="border"
                                                Background="Transparent"
                                                SnapsToDevicePixels="True">
                                            <Border.Effect>
                                                <DropShadowEffect Opacity="0" />
                                            </Border.Effect>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal">
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)">
                                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Focusable="False" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        </Style>
                    </StackPanel.Resources>

                    <Button Margin="10,2,10,2"
                            Click="MinimizeButton_OnClick"
                            Content="0"
                            Style="{DynamicResource CaptionButtonStyleKey}" />
                    <Button x:Name="MaximizeButton"
                            Margin="10,2,10,2"
                            Click="MaximizeButton_OnClick"
                            Content="1"
                            Style="{DynamicResource CaptionButtonStyleKey}" />
                    <Button Margin="10,2,5,2"
                            Click="CloseButton_OnClick"
                            Content="r"
                            Style="{DynamicResource CaptionButtonStyleKey}" />
                </StackPanel>

            </Grid>

        </materialDesign:Card>

        <Grid Grid.Row="1">

            <ProgressBar Width="100"
                         Height="100"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         IsIndeterminate="True"
                         Style="{StaticResource MaterialDesignCircularProgressBar}"
                         Visibility="{Binding ProgressBarVisibility}" />

            <Frame Content="{Binding CurrentPage}"
                   NavigationUIVisibility="Hidden"
                   Margin="0,5,0,0"/>

        </Grid>
    </Grid>
</Window>
